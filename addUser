public String addUser(UserForm user, String agencyId) {
        try {
            String role = user.getUserType();
            String sql = "INSERT INTO USER_MASTER(user_name, user_type, user_password, disabled, First_name, Last_name, phone, address, city, state, parent_user_id, agencyId, user_created) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, date_add(now(), INTERVAL 330 MINUTE))";
            
            KeyHolder keyHolder = new GeneratedKeyHolder();
            jdbcTemplate.update(new PreparedStatementCreator() {
                @Override
                public PreparedStatement createPreparedStatement(Connection conn) throws SQLException {
                    PreparedStatement pstmt = conn.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);
                    
                    if (user.getUserName() != null) {
                        pstmt.setString(1, user.getUserName().trim());
                    }
                    pstmt.setString(2, role);
                    if (user.getUserPassword() != null) {
                        pstmt.setString(3, user.getUserPassword().trim());
                    }
                    pstmt.setString(4, "N");
                    pstmt.setString(5, user.getFirstName());
                    pstmt.setString(6, user.getLastName());
                    pstmt.setString(7, user.getPhoneNo());
                    pstmt.setString(8, user.getAddress());
                    pstmt.setString(9, user.getCity());
                    pstmt.setString(10, user.getState());

                    if (role.equals("21")) {
                        pstmt.setString(11, "0");
                    } else if (role.equals("11")) {
                        pstmt.setString(11, "-1");
                    } else {
                        pstmt.setString(11, user.getTeamNameDrop());
                    }
                    pstmt.setString(12, agencyId);

                    return pstmt;
                }
            }, keyHolder);

            int id = keyHolder.getKey().intValue();

            if (role.equals("4") || role.equals("6")) {
                addUserLoginDetails(id, user.getUserName().trim());
            }

            if (role.equals("2") || role.equals("3") || role.equals("5")) {
                if (user.getTeamNameDrop() != null && !user.getTeamNameDrop().equals("-1")) {
                    sql = "UPDATE h2h_TEAMS SET SUP_USER_ID = (SELECT USER_ID FROM USER_MASTER WHERE USER_NAME = '"
                            + user.getUserName() + "') WHERE TEAM_ID = " + user.getTeamNameDrop();
                } else if (user.getTeamNameText() != null && !user.getTeamNameText().trim().equals("")) {
                    sql = "INSERT INTO h2h_TEAMS(TEAM_NAME, CITY_ID, SUP_USER_ID,agencyId) VALUES('"
                            + user.getTeamNameText().trim() + "'," + user.getCity()
                            + ",(SELECT USER_ID FROM USER_MASTER WHERE USER_NAME = '" + user.getUserName().trim()
                            + "')," + agencyId + " )";
                }

                jdbcTemplate.update(sql);
            }

            if (user.getMulTeamNameDrop() != null && user.getMulTeamNameDrop().length != 0
                    && user.getUserType().equals("11")) {
                mapTeamNames(user.getMulTeamNameDrop(), String.valueOf(id), agencyId);
            }
                        if (role.equals("2") || role.equals("3") || role.equals("5")) {
                if (user.getTeamNameText() != null && !user.getTeamNameText().equals("")) {
                    String sqlUpdate = "UPDATE USER_MASTER SET PARENT_USER_ID = (SELECT TEAM_ID FROM h2h_TEAMS WHERE TEAM_NAME='"
                            + user.getTeamNameText().trim() + "') WHERE USER_NAME='" + user.getUserName() + "'";
                    jdbcTemplate.update(sqlUpdate);

                    sqlUpdate = "insert into geofencing_city (city_id,city_name,state_id,state_name,team_id,team_name) values ("
                            + user.getCity() + ",(select city_name from city_master where city_id = " + user.getCity()
                            + ")," + user.getState() + "," + "(select state_name from state_master where state_id = "
                            + user.getState() + "),(SELECT TEAM_ID FROM h2h_TEAMS WHERE TEAM_NAME='"
                            + user.getTeamNameText().trim() + "'),'" + user.getTeamNameText() + "')";

                    jdbcTemplate.update(sqlUpdate);
                }
            }

            if (role.equals("21")) {
                String sql1 = "INSERT INTO trainer_details(user_id,email_id,user_type) VALUES(?,?,?)";
                jdbcTemplate.update(sql1, id, user.getEmail(), user.getUserType());
            }

            if (role.equals("4") || role.equals("6")) { // only for promoters
                String cutOffDate = "";
                String kycUpdate = "";

                if (isConstantCutOffDate() == 1 && (getUserCreatedDate(String.valueOf(id)) == null
                        || getUserCreatedDate(String.valueOf(id)).before(getNewPromoterCutoffDate()))) {
                    cutOffDate = getCutOffDateFromConfig();
                    kycUpdate = "update user_master set retakeKyc= 'Y', cutoffday = (select config_value from "
                            + "configdata where config_name = 'cutoffdays'), auditorcutoffday = (select config_value from "
                            + "configdata where config_name = 'auditorcutoffdays'), retakeSetDate = date_add(now(), INTERVAL 330 MINUTE),"
                            + "cutOffDate = date('" + cutOffDate + "'), auditorCutOffDate = date('" + cutOffDate + "') "
                            + "where user_id =" + id + "";
                } else {
                    cutOffDate = getCutOffDate(new SimpleDateFormat("yyyy-MM-dd").format(new Date()),
                            Integer.valueOf(ContextUtil.getDBConfigValues("cutoffdays")), String.valueOf(id));

                    kycUpdate = "update user_master set retakeKyc= 'Y', cutoffday = (select config_value from "
                            + "configdata where config_name = 'cutoffdays'), auditorcutoffday = (select config_value from "
                            + "configdata where config_name = 'auditorcutoffdays'), retakeSetDate = date_add(now(), INTERVAL 330 MINUTE),"
                            + "cutOffDate = date('" + cutOffDate + "'), auditorCutOffDate = DATE_ADD( date('"
                            + cutOffDate
                            + "'), INTERVAL (select config_value from configdata where config_name = 'auditorcutoffdays') DAY) "
                            + "where user_id =" + id + "";
                }

                jdbcTemplate.update(kycUpdate);
            }

        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }

        return "success";
    }

    
