 public List<Brands> getAllBrandDetails() {
        List<Brands> brandList = new ArrayList<>();
        
        String sql = "SELECT field_data_id, Field_Data_Name, primary_variant, secondary_variant, sampling FROM brands where field_data_id not in (21111, 22222) order by 2";
        
        List<Map<String, Object>> rows = jdbcTemplate.queryForList(sql);

        for (Map<String, Object> row : rows) {
            Brands brand = new Brands();
            brand.setBrandId((String) row.get("field_data_id"));
            brand.setBrandName((String) row.get("Field_Data_Name"));
            brand.setPrimaryVariant((String) row.get("primary_variant"));
            brand.setSecondaryVariant((String) row.get("secondary_variant"));
            brand.setHasSampling((String) row.get("sampling"));
            brandList.add(brand);
        }

        return brandList;
    }
public List<Brands> getAllBrandsVarient() {
        String sql = "SELECT variant_name, variant_id FROM brand_variant";

        return jdbcTemplate.query(sql, new ResultSetExtractor<List<Brands>>() {
            @Override
            public List<Brands> extractData(ResultSet rs) throws SQLException {
                List<Brands> brandList = new ArrayList<>();
                while (rs.next()) {
                    Brands brand = new Brands();
                    brand.setVarientId(rs.getInt("variant_id"));
                    brand.setVarientName(rs.getString("variant_name"));
                    brandList.add(brand);
                }
                return brandList;
            }
        });
    }
   public List<Brands> getAllBrandDetails() {
        List<Brands> brandList = new ArrayList<>();
        
        String sql = "SELECT field_data_id, Field_Data_Name, primary_variant, secondary_variant, sampling FROM brands where field_data_id not in (21111, 22222) order by 2";
        
        List<Map<String, Object>> rows = jdbcTemplate.queryForList(sql);

        for (Map<String, Object> row : rows) {
            Brands brand = new Brands();
            brand.setBrandId(String.valueOf(row.get("field_data_id")));
            brand.setBrandName((String) row.get("Field_Data_Name"));
            brand.setPrimaryVariant((String) row.get("primary_variant"));
            brand.setSecondaryVariant((String) row.get("secondary_variant"));
            brand.setHasSampling((String) row.get("sampling"));
            brandList.add(brand);
        }

        return brandList;
    }
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementCreator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

@Repository
public class BrandRepository {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    public String addBrand(BrandForm brand, String option) {
        try {
            int sampling = 0, hasVdo = 0, hasAdo = 0, hasAdhoc = 0;
            if (brand.getSampling() != null && !brand.getSampling().equals("")) {
                sampling = 1;
            }
            if (brand.getP_hasVdo() != null && !brand.getP_hasVdo().equals("")) {
                hasVdo = 1;
            }
            if (brand.getP_hasAdo() != null && !brand.getP_hasAdo().equals("")) {
                hasAdo = 1;
            }
            if (brand.getisNonH2h() != null && brand.getisNonH2h().equals("on")) {
                hasAdhoc = 1;
            }

            if (option.equals("addBrand")) {
                String sql = "INSERT INTO BRANDS(field_data_name,field_data_details,primary_variant,secondary_variant,field_data_id,sampling,no_of_primaryCalls,no_of_secondaryCalls,no_of_Sampling,ter_variant, qat_variant, qun_variant, no_of_terCalls, no_of_qatCalls, no_of_qunCalls,pri_tur,sec_tur,ter_tur,qat_tur,qun_tur,has_Video,has_Audio,samp_tur,start_hour,end_hour,avg_conversion,freebie_name,isNonH2h) " +
                        "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                jdbcTemplate.update(sql, brand.getBrandName().trim(), brand.getBrandDetails(), brand.getPrimaryId(), brand.getSecondaryId(), brand.getNewBrandId(), sampling, brand.getP_npc(), brand.getP_nsc(), brand.getP_nsp(), brand.getTertiaryId(), brand.getQuaternaryId(), brand.getQunaryId(), brand.getP_n3c(), brand.getP_n4c(), brand.getP_n5c(), brand.getPri_tur(), brand.getSec_tur(), brand.getTer_tur(), brand.getQat_tur(), brand.getQun_tur(), hasVdo, hasAdo, brand.getSamp_tur(), brand.getStTime(), brand.getEndTime(), brand.getAvg_conv(), brand.getFreebieName().trim(), hasAdhoc);
            } else if (!brand.getBrands().equals("-1") || (brand.getBrands() != null)) {
                String sqlUpdate = "UPDATE BRANDS set field_data_name =?,field_data_details= ?," +
                        "primary_variant=?,secondary_variant=?,sampling=?, " +
                        "no_of_primaryCalls=?,no_of_secondaryCalls=?,no_of_Sampling=?, " +
                        "ter_variant=?, qat_variant=?, qun_variant=?, " +
                        "no_of_terCalls=?, no_of_qatCalls=?, no_of_qunCalls=?, " +
                        "pri_tur=?,sec_tur=?,ter_tur=?,qat_tur=?,qun_tur=?,has_Video=?,has_Audio=?,samp_tur=?,start_hour=?,end_hour,avg_conversion=?,freebie_name=?,isNonH2h=? where field_data_id= ?";
                         jdbcTemplate.update(sqlUpdate, brand.getBrandName().trim(), brand.getBrandDetails(), brand.getPrimaryId(), brand.getSecondaryId(), sampling, brand.getP_npc(), brand.getP_nsc(), brand.getP_nsp(), brand.getTertiaryId(), brand.getQuaternaryId(), brand.getQunaryId(), brand.getP_n3c(), brand.getP_n4c(), brand.getP_n5c(), brand.getPri_tur(), brand.getSec_tur(), brand.getTer_tur(), brand.getQat_tur(), brand.getQun_tur(), hasVdo, hasAdo, brand.getSamp_tur(), brand.getStTime(), brand.getEndTime(), brand.getAvg_conv(), brand.getFreebieName(), hasAdhoc, brand.getBrands());
            }

            String batchDetailsSql = "insert into brand_batchdetails(generated_date) value(?)";
            jdbcTemplate.update(batchDetailsSql, new Timestamp(System.currentTimeMillis()));

        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
        return "success";
    }
}
public BrandForm fetchBrandDetails(HttpSession session, BrandForm brand) {
        UserForm loginUser = (UserForm) session.getAttribute("userLogin");
        String sql = "SELECT field_data_name, field_data_details, primary_variant, secondary_variant,sampling,no_of_primaryCalls,no_of_secondaryCalls,no_of_Sampling, " +
                "ter_variant, qat_variant, qun_variant, no_of_terCalls, no_of_qatCalls, no_of_qunCalls,pri_tur,sec_tur,ter_tur,qat_tur,qun_tur,has_Video," +
                "has_Audio,samp_tur,start_hour,end_hour,avg_conversion,freebie_name,isNonH2h " +
                "from h2h_schema.brands where field_data_id = ?";
        // if (loginUser.getUserType().equals("9")) { sql += " AND agencyId=" + loginUser.getUserId(); }

        return jdbcTemplate.queryForObject(sql, new Object[]{brand.getBrands()}, (ResultSetExtractor<BrandForm>) rs -> {
            if (rs.next()) {
                brand.setBrandName(rs.getString("field_data_name"));
                brand.setBrandDetails(rs.getString("field_data_details"));
                brand.setPrimaryId(rs.getInt("primary_variant"));
                brand.setSecondaryId(rs.getInt("secondary_variant"));
                brand.setSampling(rs.getInt("sampling") == 1 ? "on" : "");
                brand.setP_npc(rs.getInt("no_of_primaryCalls"));
                brand.setP_nsc(rs.getInt("no_of_secondaryCalls"));
                brand.setP_nsp(rs.getInt("no_of_Sampling"));
                brand.setTertiaryId(rs.getInt("ter_variant"));
                brand.setQuaternaryId(rs.getInt("qat_variant"));
                brand.setQunaryId(rs.getInt("qun_variant"));
                brand.setP_n3c(rs.getInt("no_of_terCalls"));
                brand.setP_n4c(rs.getInt("no_of_qatCalls"));
                brand.setP_n5c(rs.getInt("no_of_qunCalls"));
                brand.setPri_tur(rs.getDouble("pri_tur"));
                brand.setSec_tur(rs.getDouble("sec_tur"));
                brand.setTer_tur(rs.getDouble("ter_tur"));
                brand.setQat_tur(rs.getDouble("qat_tur"));
                brand.setQun_tur(rs.getDouble("qun_tur"));
                brand.setP_hasVdo(rs.getString("has_Video").equals("1") ? "on" : "off");
                brand.setP_hasAdo(rs.getString("has_Audio").equals("1") ? "on" : "off");
                brand.setSamp_tur(rs.getDouble("samp_tur"));
                brand.setStTime(rs.getInt("start_hour"));
                brand.setEndTime(rs.getInt("end_hour"));
                brand.setAvg_conv(rs.getInt("avg_conversion"));
                brand.setFreebieName(rs.getString("freebie_name"));
                brand.setisNonH2h(rs.getInt("isNonH2h") == 1 ? "on" : "off");
                return brand;
            }
            return null;
        });
    }
